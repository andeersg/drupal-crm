<?php

/**
 * @file
 * Holds Message Template Entity schema.
 */

/**
 * Implements hook_schema().
 */
function crm_message_template_schema() {

  $schema['crm_message_template'] = array(
    'description' => 'message template entity',
    'fields' => array(
      'template_id' => array(
        'description' => 'The primary identifier for a table.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Unique identifier for a table.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of message template.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'revision_id' => array(
        'description' => 'The current {crm_message_template_revision}.revision_id version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'created' => array(
        'description' => 'Creation date',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'Modification date',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'language' => array(
        'description' => 'The {languages}.language of this record.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ),
      'locked' => array(
        'description' => 'Defines if entity is locked so it cannot be deleted.',
        'type' => 'int',
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('template_id'),
    'unique keys' => array(
      'revision_id' => array('revision_id'),
      'name' => array('name'),
    ),
    'foreign keys' => array(
      'crm_message_template_revision' => array(
        'table' => 'crm_message_template_revision',
        'columns' => array('revision_id' => 'revision_id'),
      ),
    ),
    'indexes' => array(
      'crm_message_template_id' => array('template_id'),
      'crm_message_template_name' => array('name'),
      'crm_message_template_type' => array('type'),
      'language' => array('language'),
    ),
  );

  $schema['crm_message_template_revision'] = array(
    'description' => 'message entity revision',
    'fields' => array(
      'revision_id' => array(
        'description' => 'The primary identifier for a table.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'template_id' => array(
        'description' => 'Parent {crm_message_template}.template_id message identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Unique {crm_message_template}.name message key.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of message template.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The {languages}.language of this record.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ),
      'revision_uid' => array(
        'description' => 'Revision author {users}.uid',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'revision_timestamp' => array(
        'description' => 'Revision date of creation',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'log' => array(
        'description' => 'The log entry explaining the changes in this version.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'locked' => array(
        'description' => 'Defines if entity is locked so it cannot be deleted.',
        'type' => 'int',
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('revision_id'),
    'foreign keys' => array(
      'crm_message_template' => array(
        'table' => 'crm_message_template',
        'columns' => array(
          'template_id' => 'template_id',
        ),
      ),
    ),
    'indexes' => array(
      'crm_message_template_id' => array('template_id'),
      'crm_message_template_name' => array('name'),
      'crm_message_template_type' => array('type'),
      'language' => array('language'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function crm_message_template_install() {
  $field = array(
    'settings' => array(
      'target_type' => 'crm_message_template',
      'handler' => 'base',
      'handler_settings' => array(
        'target_bundles' => array(),
        'sort' => array(
          'type' => 'none',
        ),
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 0,
          ),
        ),
      ),
    ),
    'field_name' => 'crm_message_template',
    'type' => 'entityreference',
    'module' => 'entityreference',
    'active' => 1,
    'locked' => 0,
    'cardinality' => FIELD_CARDINALITY_UNLIMITED,
    'deleted' => 0,
  );
  if (!field_info_field($field['field_name'])) {
    field_create_field($field);
  }
  $field['cardinality'] = 1;
  $field['field_name'] = 'crm_message_template_single';
  if (!field_info_field($field['field_name'])) {
    field_create_field($field);
  }
}

/**
 * Implements hook_uninstall().
 */
function crm_message_template_uninstall() {
  field_delete_field('crm_message_template');
  field_delete_field('crm_message_template_single');
}