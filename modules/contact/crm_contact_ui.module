<?php

/**
 * @file
 * UI for contact entity.
 */

/**
 * Implements hook_menu().
 */
function crm_contact_ui_menu() {
  $items = array();

  $items['admin/crm/contact/%crm_contact'] = array(
    'title callback' => 'crm_contact_label',
    'title arguments' => array(3),
    'page callback' => 'crm_contact_view',
    'page arguments' => array(3),
    'access callback' => 'crm_contact_access',
    'access arguments' => array('view', 3),
    'type' => MENU_CALLBACK,
    'file' => 'includes/crm_contact_ui.list.inc',
  );

  $items['admin/crm/contact/%crm_contact/view'] = array(
    'title' => 'View',
    'page callback' => 'crm_contact_view',
    'page arguments' => array(3),
    'access callback' => 'crm_contact_access',
    'access arguments' => array('view', 3),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_contact_ui.list.inc',
    'weight' => -2,
  );

  $items['admin/crm/contact/%crm_contact/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'crm_contact_ui_form_wrapper',
    'page arguments' => array(3),
    'access callback' => 'crm_contact_access',
    'access arguments' => array('update', 3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_contact_ui.form.inc',
    'weight' => -1,
  );

  $items['admin/crm/contact/%crm_contact/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'crm_contact_ui_form_wrapper',
    'page arguments' => array(3, TRUE),
    'access callback' => 'crm_contact_access',
    'access arguments' => array('delete', 3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_contact_ui.form.inc',
    'weight' => 99,
  );

  $items['admin/crm/contact/add'] = array(
    'title' => 'Add contact',
    'page callback' => 'crm_contact_ui_form_wrapper',
    'page arguments' => array(),
    'access callback' => 'crm_contact_access',
    'access arguments' => array('create'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'includes/crm_contact_ui.form.inc',
  );

  $items['admin/crm/config/contact'] = array(
    'title' => 'Contact',
    'description' => 'Manage Contact settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_contact_ui_settings_form'),
    'access arguments' => array('crm administer'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'crm_contact_ui.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_menu_local_tasks_alter().
 *
 * Add links to all channels collected under contact.
 */
function crm_contact_ui_menu_local_tasks_alter(&$data, $router_item, $root_path) {

  if (!($root_path == 'admin/crm/contact/%')) {
    return;
  }
  $contact = $router_item['page_arguments'][0];
  $wrapper = entity_metadata_wrapper('crm_contact', $contact);
  foreach ($wrapper->crm_channel->getIterator() as $channel) {
    // Add a tabs linking to all channels to contact page.
    $uri = entity_uri('crm_channel', $channel->value());
    $data['tabs'][1]['output'][] = array(
      '#theme' => 'menu_local_task',
      '#link' => array(
        'title' => $channel->label(),
        'href' => $uri['path'],
        'localized_options' => array(
          'attributes' => array(
            'title' => t('See channel'),
          ),
        ),
      ),
    );
  }
  if (isset($data['tabs'][1]['output']) && is_array($data['tabs'][1]['output'])) {
    // Trick to display also if there is only one channel.
    $data['tabs'][1]['count'] = count($data['tabs'][1]['output']) + 1;
  }
}

/**
 * Implements hook_views_api().
 */
function crm_contact_ui_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'crm_contact_ui') . '/includes/views',
  );
}

/**
 * Implements hook_entity_info_alter().
 */
function crm_contact_ui_entity_info_alter(&$entity_info) {

  // Uri callback.
  $entity_info['crm_contact']['uri callback'] = 'crm_contact_ui_uri';

  // Expose the order UI for order fields.
  $entity_info['crm_contact']['bundles']['crm_contact']['admin'] = array(
    'path' => 'admin/crm/config/contact',
    'real path' => 'admin/crm/config/contact',
    'access arguments' => array('crm contact administer'),
  );
}

/**
 *
 *
 * @param $contact
 */
function crm_contact_ui_uri($contact) {
//  // First look for a return value in the default entity uri callback.
//  $uri = commerce_order_uri($order);
//
//  // If a value was found, return it now.
//  if (!empty($uri)) {
//    return $uri;
//  }

  // Only return a value if the user has permission to view the order.
  if (crm_contact_access('view', $contact)) {
    return array(
      'path' => 'admin/crm/contact/' . entity_id('crm_contact', $contact),
    );
  }

  return NULL;
}

/**
 * Implements hook_field_widget_form_alter().
 */
function crm_contact_ui_field_widget_form_alter(&$element, &$form_state, $context) {
  if (isset($element['#field_name']) && $element['#field_name'] == 'crm_deprecated') {
    $element['#access'] = FALSE;
  }
}
