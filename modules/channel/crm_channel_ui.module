<?php

/**
 * @file
 * Implements some hooks to create admin interface for contact channels.
 */

/**
 * Implements hook_menu().
 */
function crm_channel_ui_menu() {
  $items = array();

  $items['admin/people/crm/config/channel'] = array(
    'title' => 'Channel',
    'page callback' => 'crm_index',
    'page arguments' => array(),
    'access arguments' => array('crm administer'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/people/crm/channel'] = array(
    'title' => 'Channel',
    'page callback' => 'crm_index',
    'page arguments' => array(),
    'access arguments' => array('crm channel overview'),
    'type' => MENU_NORMAL_ITEM,
  );

  foreach (crm_channel_types() as $type => $bundle) {
    $type_arg = strtr($type, '_', '-');
    $items['admin/people/crm/config/channel/' . $type_arg] = array(
      'title' => $bundle,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('crm_channel_ui_settings', $type),
      'access arguments' => array('crm administer'),
      'type' => MENU_NORMAL_ITEM,
    );
  }

  $items['admin/people/crm/channel/%crm_channel'] = array(
    'title callback' => 'crm_channel_label',
    'title arguments' => array(4),
    'page callback' => 'crm_channel_view',
    'page arguments' => array(4),
    'access callback' => 'crm_channel_access',
    'access arguments' => array('view', 4),
    'type' => MENU_CALLBACK,
  );

  $items['admin/people/crm/channel/%crm_channel/view'] = array(
    'title' => 'View',
    'page callback' => 'crm_channel_view',
    'page arguments' => array(4),
    'access callback' => 'crm_channel_access',
    'access arguments' => array('view', 4),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'weight' => -2,
  );

  $items['admin/people/crm/channel/%crm_channel/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'crm_channel_ui_form_wrapper',
    'page arguments' => array(4),
    'access callback' => 'crm_channel_access',
    'access arguments' => array('update', 4),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_channel_ui.form.inc',
    'weight' => -1,
  );

  $items['admin/people/crm/channel/%crm_channel/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'crm_channel_ui_form_wrapper',
    'page arguments' => array(4, TRUE),
    'access callback' => 'crm_channel_access',
    'access arguments' => array('delete', 4),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_channel_ui.form.inc',
    'weight' => 99,
  );

  $items['admin/people/crm/channel/add'] = array(
    'title' => 'Add new channel',
    'page callback' => 'crm_channel_ui_add',
    'page arguments' => array(),
    'access callback' => 'crm_channel_access',
    'access arguments' => array('create'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/crm_channel_ui.form.inc',
  );

  $items['admin/people/crm/channel/add/%'] = array(
    'title' => 'Add new channel',
    'page callback' => 'crm_channel_ui_form_wrapper',
    'page arguments' => array(NULL, FALSE, 5),
    'access callback' => 'crm_channel_access',
    'access arguments' => array('create'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/crm_channel_ui.form.inc',
  );

  return $items;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function crm_channel_ui_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  // Add action link to 'admin/people/crm/channel/add' on 'admin/people/crm/channel' page.
  if ($root_path == 'admin/people/crm/channel') {
    $item = menu_get_item('admin/people/crm/channel/add');
    if ($item['access']) {
      $data['actions']['output'][] = array(
        '#theme' => 'menu_local_action',
        '#link' => $item,
      );
    }
  }
}

/**
 * Implements hook_views_api().
 */
function crm_channel_ui_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'crm_channel_ui') . '/includes/views',
  );
}

/**
 * Settings form.
 */
function crm_channel_ui_settings($form, &$form_state, $bundle) {
  return system_settings_form($form);
}

/**
 * Implements hook_entity_info_alter().
 */
function crm_channel_ui_entity_info_alter(&$entity_info) {
  // Expose the admin UI for product fields.
  foreach ($entity_info['crm_channel']['bundles'] as $type => &$bundle) {
    $bundle['admin'] = array(
      'path' => 'admin/people/crm/config/channel/' . strtr($type, '_', '-'),
      'access arguments' => array('crm manage'),
    );
  }
}
