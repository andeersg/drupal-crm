<?php

/**
 * @file
 *
 */

/**
 * Implements hook_install().
 */
function crm_phone_install() {

  $t = get_t();
  $field = array(
    'settings' => array(),
    'field_name' => 'field_crm_phone',
    'type' => 'telephone',
    'module' => 'telephone',
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
  );
  field_create_field($field);

  $instance = array(
    'label' => $t('Phone'),
    'widget' => array(
      'weight' => '1',
      'type' => 'telephone_default',
      'module' => 'telephone',
      'active' => 1,
      'settings' => array(
        'placeholder' => '',
      ),
    ),
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'display' => array(
      'default' => array(
        'label' => 'above',
        'type' => 'text_plain',
        'settings' => array(),
        'module' => 'text',
        'weight' => 0,
      ),
    ),
    'required' => 1,
    'description' => '',
    'default_value' => NULL,
    'field_name' => 'field_crm_phone',
    'entity_type' => 'crm_channel',
    'bundle' => 'phone',
    'deleted' => 0,
  );
  field_create_instance($instance);
}

/**
 * Implements hook_uninstall().
 */
function crm_phone_uninstall() {
  $instance = array(
    'entity_type' => 'crm_channel',
    'field_name' => 'field_crm_phone',
    'bundle' => 'phone',
  );
  field_delete_instance($instance);
  $instance = array(
    'entity_type' => 'crm_message',
    'field_name' => 'crm_message_phone',
    'bundle' => 'phone',
  );
  field_delete_instance($instance);
  $instance = array(
    'entity_type' => 'crm_message',
    'field_name' => 'crm_message_phone_body',
    'bundle' => 'phone',
  );
  field_delete_instance($instance);

  variable_del('crm_channel_ui_phone_newsletter');

  if (db_table_exists('crm_message')) {
    field_attach_delete_bundle('crm_message', 'phone');
    db_delete('crm_message')->condition('type', 'phone')->execute();
  }
  if (db_table_exists('crm_channel')) {
    field_attach_delete_bundle('crm_channel', 'phone');
    db_delete('crm_channel')->condition('type', 'phone')->execute();
  }
}
